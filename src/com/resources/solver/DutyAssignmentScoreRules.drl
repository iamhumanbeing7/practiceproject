/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.resouces.solver;
    dialect "java"

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;
//import

import com.java.domain.*;
import com.java.app.MiscTools;
import com.java.persistence.Constants;

global HardSoftScoreHolder scoreHolder;

// ############################################################################
// Hard constraints
// ############################################################################
rule "#1 - HC - staff pool must match duty pool"
    when
        DutyAssignment(isAssgined(), $daDutyPool : duty.getPool(), $daStaffPool : staff.getPool(), $daStaffPool != $daDutyPool)

    then
        scoreHolder.addHardConstraintMatch(kcontext,-20);
end

rule "#2 - HC - DO staff from pool B and ORTL & ORTM from pool A"
    when
        DutyAssignment(isAssgined(), (duty.getType() == Constants.dutyType_ORT_Lead && staff.getPool() != Constants.poolB) || (duty.getType() != Constants.dutyType_ORT_Lead && staff.getPool() != Constants.poolA))

    then
        scoreHolder.addHardConstraintMatch(kcontext,-10);
end

rule "#3 - HC - At least 1 week interval between 2 assginments for a staff"
    when
        $da1: DutyAssignment(isAssgined(), $daDutyPeriodStartDate : duty.getPeriod().getStartDate(), $daStaff : staff)
        DutyAssignment(isAssgined(), this != $da1, staff == $daStaff, MiscTools.differenceOfDates(duty.period.getStartDate(), $daDutyPeriodStartDate) < 14)


    then
        scoreHolder.addHardConstraintMatch(kcontext,-10);
end

rule "#4 - SC - New duplicate specialty in same period"
    when
        $da1: DutyAssignment(isAssgined(), $daDutyPeriod : duty.getPeriod(), $dsStaffSpecialty : staff.getSpecialty())
        DutyAssignment(isAssgined(), this != $da1, duty.getPeriod().getWeeksequence() == $daDutyPeriod.getWeeksequence(), staff.getSpecialty() == $dsStaffSpecialty)
    then
//        scoreHolder.addHardConstraintMatch(kcontext,-1);
        scoreHolder.addSoftConstraintMatch(kcontext,-20);
end

rule "#5 - SC - to evenly distribute duties on public holidays"
    when
        $da1: DutyAssignment(isAssgined(), MiscTools.isContainPH(duty.getPeriod()), $daStaff : staff, $daDutyPeriod : duty.getPeriod())
        DutyAssignment(isAssgined(), this != $da1, staff == $daStaff, MiscTools.isContainPH(duty.getPeriod()), duty.getPeriod() != $daDutyPeriod)

    then
        scoreHolder.addSoftConstraintMatch(kcontext,-10);
end